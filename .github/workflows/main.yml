name: JMeter CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  jmeter-tests:
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.set-timestamp.outputs.timestamp }}

    steps:
      # ✅ Set timestamp for report naming
      - name: Set timestamp
        id: set-timestamp
        run: echo "timestamp=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_OUTPUT

      # ✅ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ Install JMeter
      - name: Install JMeter
        run: |
          sudo apt update
          sudo apt install -y openjdk-11-jre
          wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.6.2.tgz
          tar -xvzf apache-jmeter-5.6.2.tgz
          echo "JMETER_HOME=$(pwd)/apache-jmeter-5.6.2" >> $GITHUB_ENV
          echo "$(pwd)/apache-jmeter-5.6.2/bin" >> $GITHUB_PATH

      # ✅ Reload environment variables
      - name: Load environment variables
        run: source $GITHUB_ENV

      # ✅ Verify JMeter Installation
      - name: Verify JMeter Installation
        run: jmeter --version

      # ✅ Create report directories
      - name: Create report directories
        run: |
          mkdir -p ./jmeter-pages/reports
          mkdir -p ./jmeter-tests/results
          mkdir -p ./jmeter-history

      # ✅ Run JMeter Tests
      - name: Run JMeter Tests
        run: |
          jmeter -n \
            -t ./C_1.jmx \
            -l ./jmeter-tests/results/results.jtl \
            -e -o ./jmeter-pages/reports \
            -Jthreads=100 -Jrampup=10 -Jduration=60 -f

      # ✅ Inject Base URL in JMeter Report
      - name: Inject Base URL
        run: |
          # Insert base URL tag to fix navigation links
          sed -i 's#<head>#<head><base href="/chaabi-jmeter-tests/">#g' ./jmeter-pages/reports/index.html
          
          # Add a custom navigation section with links to our dashboards
          sed -i 's#</body>#<div style="margin-top: 20px; padding: 10px; background-color: #f8f9fa; border-radius: 5px;"><h3>Performance Test History</h3><ul><li><a href="/chaabi-jmeter-tests/dashboard/index.html">View Test History Dashboard</a></li><li><a href="/chaabi-jmeter-tests/dashboard/trend_chart.html">View Performance Trends</a></li><li><a href="/chaabi-jmeter-tests/historical-reports/index.html">View Previous Test Run</a></li></ul></div></body>#g' ./jmeter-pages/reports/index.html

      # ✅ Display Test Summary
      - name: Display Test Summary
        run: |
          echo "Test Summary:"
          grep "summary =" ./jmeter-tests/results/results.jtl || echo "No summary found"

      # ✅ Save Historical Report Copy
      - name: Create Historical Report Copy
        run: |
          TIMESTAMP=${{ steps.set-timestamp.outputs.timestamp }}
          COMMIT_ID=$(git rev-parse --short HEAD)
          HISTORY_DIR="./jmeter-history/report_${TIMESTAMP}_${COMMIT_ID}"
          
          # Copy report files to history directory
          mkdir -p $HISTORY_DIR
          cp -r ./jmeter-pages/reports/* $HISTORY_DIR/
          cp ./jmeter-tests/results/results.jtl $HISTORY_DIR/
          
          # Create simple metadata file
          echo "Timestamp: ${TIMESTAMP}" > $HISTORY_DIR/metadata.txt
          echo "Commit: ${COMMIT_ID}" >> $HISTORY_DIR/metadata.txt
          echo "Branch: ${GITHUB_REF_NAME}" >> $HISTORY_DIR/metadata.txt
          
          # Archive for storage efficiency
          tar -czf "${HISTORY_DIR}.tar.gz" $HISTORY_DIR
          rm -rf $HISTORY_DIR

      # ✅ Upload Historical Reports as Artifacts
      - name: Upload Historical Reports
        uses: actions/upload-artifact@v4
        with:
          name: JMeter-Historical-Reports
          path: ./jmeter-history/

      # ✅ Upload Current Reports as Artifacts
      - name: Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: JMeter-Reports
          path: ./jmeter-pages/reports

  # ✅ Deploy to GitHub Pages with History
  deploy:
    needs: jmeter-tests
    runs-on: ubuntu-latest
    # Set permissions for GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    # Environment for GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # ✅ Configure GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # ✅ Create working directories
      - name: Create directories
        run: |
          mkdir -p ./working-dir/deploy
          mkdir -p ./working-dir/deploy/history
          mkdir -p ./working-dir/deploy/dashboard
          mkdir -p ./working-dir/deploy/current
          mkdir -p ./working-dir/deploy/historical-reports

      # ✅ Download historical reports artifact
      - name: Download historical reports artifact
        uses: actions/download-artifact@v4
        with:
          name: JMeter-Historical-Reports
          path: ./working-dir/deploy/downloaded-history

      # ✅ Download current reports artifact
      - name: Download current reports artifact
        uses: actions/download-artifact@v4
        with:
          name: JMeter-Reports
          path: ./working-dir/deploy/current

      # ✅ Checkout repository for scripts and templates
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: ./working-dir/repo

      # ✅ Create templates directory if it doesn't exist
      - name: Create templates directory
        run: |
          mkdir -p ./working-dir/repo/templates

          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>JMeter Test History Dashboard</title>
            <style>
              body { font-family: Arial, sans-serif; margin: 20px; }
              table { border-collapse: collapse; width: 100%; }
              th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
              th { background-color: #f2f2f2; }
              tr:hover {background-color: #f5f5f5;}
              .current { background-color: #e6ffe6; }
              .nav-links { margin: 20px 0; padding: 10px; background-color: #f8f9fa; border-radius: 5px; }
              .nav-links a { margin-right: 20px; text-decoration: none; color: #0366d6; }
              .nav-links a:hover { text-decoration: underline; }
            </style>
          </head>
          <body>
            <h1>JMeter Test History Dashboard</h1>
            <p>Last updated: CURRENT_DATE</p>
            <div class="nav-links">
              <a href="/chaabi-jmeter-tests/current/index.html">Current Test Report</a>
              <a href="/chaabi-jmeter-tests/historical-reports/index.html">Latest Historical Report</a>
              <a href="/chaabi-jmeter-tests/dashboard/trend_chart.html">Performance Trend Chart</a>
            </div>
            <h2>Test Reports History</h2>
            <table>
              <tr>
                <th>Date & Time</th>
                <th>Commit ID</th>
                <th>Actions</th>
              </tr>
              <!-- REPORT_ROWS -->
            </table>
            
            <h2>Compare Test Reports</h2>
            <div>
              <p>Select two reports to compare:</p>
              <form action="javascript:void(0);" onsubmit="compareReports()">
                <label for="report1">Report 1:</label>
                <select id="report1">
                  <!-- REPORT_OPTIONS -->
                </select><br><br>
                <label for="report2">Report 2:</label>
                <select id="report2">
                  <!-- REPORT_OPTIONS -->
                </select><br><br>
                <button type="submit">Compare Reports</button>
              </form>
            </div>
            
            <script>
              function compareReports() {
                const report1 = document.getElementById('report1').value;
                const report2 = document.getElementById('report2').value;
                
                if (report1 === report2) {
                  alert('Please select two different reports to compare.');
                  return;
                }
                
                // Create a simple comparison view by opening reports side by side
                const compareUrl = '../compare.html?report1=' + report1 + '&report2=' + report2;
                window.location.href = compareUrl;
              }
            </script>
          </body>
          </html>
          EOL
          
          # Create the compare.html template
          cat > ./working-dir/repo/templates/compare.html << 'EOL'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>JMeter Reports Comparison</title>
            <style>
              body { font-family: Arial, sans-serif; margin: 0; padding: 0; }
              .header { padding: 10px 20px; background-color: #f8f9fa; border-bottom: 1px solid #ddd; }
              .comparison-container { display: flex; height: calc(100vh - 60px); }
              .report-frame { flex: 1; border: none; height: 100%; }
              .separator { width: 4px; background-color: #ddd; cursor: col-resize; }
            </style>
          </head>
          <body>
            <div class="header">
              <h2>JMeter Reports Comparison</h2>
              <a href="./dashboard/index.html">← Back to Dashboard</a>
            </div>
            <div class="comparison-container" id="container">
              <iframe class="report-frame" id="report1Frame"></iframe>
              <div class="separator" id="separator"></div>
              <iframe class="report-frame" id="report2Frame"></iframe>
            </div>
            <script>
              // Get report names from URL
              const params = new URLSearchParams(window.location.search);
              const report1 = params.get("report1");
              const report2 = params.get("report2");
              
              // Set iframe sources
              document.getElementById("report1Frame").src = "./historical-reports/" + report1 + "/index.html";
              document.getElementById("report2Frame").src = "./historical-reports/" + report2 + "/index.html";
              
              // Update title
              document.title = "Compare: " + report1 + " vs " + report2;
              
              // Set up resizable panels
              const separator = document.getElementById("separator");
              let isResizing = false;
              
              separator.addEventListener("mousedown", function(e) {
                isResizing = true;
              });
              
              document.addEventListener("mousemove", function(e) {
                if (!isResizing) return;
                
                const container = document.getElementById("container");
                const containerRect = container.getBoundingClientRect();
                const percentage = ((e.clientX - containerRect.left) / containerRect.width) * 100;
                
                // Limit the minimum width of each panel
                if (percentage > 10 && percentage < 90) {
                  document.getElementById("report1Frame").style.width = percentage + "%";
                  document.getElementById("report2Frame").style.width = (100 - percentage) + "%";
                }
              });
              
              document.addEventListener("mouseup", function() {
                isResizing = false;
              });
            </script>
          </body>
          </html>
          EOL
          
          # Create redirect template
          cat > ./working-dir/repo/templates/redirect.html << 'EOL'
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Latest JMeter Historical Report</title>
            <meta http-equiv="refresh" content="0;url=TARGET_URL">
          </head>
          <body>
            <p>Redirecting to the latest historical report...</p>
            <p>If you are not redirected automatically, <a href="TARGET_URL">click here</a>.</p>
          </body>
          </html>
          EOL

      # ✅ Extract and organize the latest report for direct viewing
      - name: Extract latest historical report
        run: |
          # Move all history archives to the history directory
          mv ./working-dir/deploy/downloaded-history/* ./working-dir/deploy/history/ 2>/dev/null || true
          
          # Find the most recent report archive
          LATEST_ARCHIVE=$(ls -t ./working-dir/deploy/history/*.tar.gz 2>/dev/null | head -1 || echo "")
          
          # Extract it for direct viewing if it exists
          if [ -n "$LATEST_ARCHIVE" ]; then
            echo "Extracting latest report for direct viewing: $LATEST_ARCHIVE"
            mkdir -p ./working-dir/deploy/historical-reports/latest
            tar -xzf "$LATEST_ARCHIVE" -C ./working-dir/deploy/historical-reports/
            
            # Create a redirect for easier access using the template
            BASENAME=$(basename "$LATEST_ARCHIVE" .tar.gz)
            cp ./working-dir/repo/templates/redirect.html ./working-dir/deploy/historical-reports/index.html
            TARGET_URL="/chaabi-jmeter-tests/historical-reports/${BASENAME}/index.html"
            sed -i "s|TARGET_URL|${TARGET_URL}|g" ./working-dir/deploy/historical-reports/index.html
          fi

      # ✅ Process and organize the history reports
      - name: Process historical reports
        run: |
          TIMESTAMP="${{ needs.jmeter-tests.outputs.timestamp }}"
          
          # Use the script to generate the dashboard
          ./working-dir/repo/scripts/generate_dashboard.sh \
            ./working-dir/deploy/history \
            ./working-dir/deploy/dashboard \
            ./working-dir/repo/templates
          
          # Process each historical report to extract and fix base URLs
          ls -t ./working-dir/deploy/history/*.tar.gz 2>/dev/null | while read report; do
            filename=$(basename "$report" .tar.gz)
            
            # Extract report if not already extracted
            if [ -f "$report" ] && [ ! -d "./working-dir/deploy/historical-reports/$filename" ]; then
              mkdir -p "./working-dir/deploy/historical-reports/$filename"
              tar -xzf "$report" -C "./working-dir/deploy/historical-reports/"
              
              # Fix base URL in historical report
              if [ -f "./working-dir/deploy/historical-reports/$filename/index.html" ]; then
                sed -i 's#<head>#<head><base href="/chaabi-jmeter-tests/">#g' "./working-dir/deploy/historical-reports/$filename/index.html"
              fi
            fi
          done
          
          # Copy compare.html template
          cp ./working-dir/repo/templates/compare.html ./working-dir/deploy/compare.html

      # ✅ Setup Python for trend charts
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      # ✅ Generate trend charts
      - name: Generate trend charts
        run: |
          # Copy script to working directory
          cp ./working-dir/repo/scripts/generate_trend_chart.py ./working-dir/deploy/
          
          # Install required Python packages
          pip install matplotlib numpy pandas
          
          # Run the script to generate trend chart
          cd ./working-dir/deploy && python generate_trend_chart.py --history-dir ./history --output-dir ./dashboard --max-reports 10
          
          # Clean up
          rm -f ./working-dir/deploy/generate_trend_chart.py

      # ✅ Prepare GitHub Pages Deployment
      - name: Prepare GitHub Pages Deployment
        run: |
          # Move current report to the main directory
          cp -r ./working-dir/deploy/current/* ./working-dir/deploy/
          
          # Copy index.html from repo if it exists, or create a minimal one if not
          if [ -f "./working-dir/repo/index.html" ]; then
            cp ./working-dir/repo/index.html ./working-dir/deploy/
          else
            cat > ./working-dir/deploy/index.html << 'EOL'
            <!DOCTYPE html>
            <html lang="en">
            <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>JMeter Test Reports</title>
            </head>
            <body>
              <h1>JMeter Test Reports</h1>
              <p>Latest test run completed: $(date)</p>
              <div style="margin-top: 20px; padding: 10px; background-color: #f8f9fa; border-radius: 5px;">
                <h3>Performance Test Resources</h3>
                <ul>
                  <li><a href="/chaabi-jmeter-tests/dashboard/index.html">View Test History Dashboard</a></li>
                  <li><a href="/chaabi-jmeter-tests/dashboard/trend_chart.html">View Performance Trends</a></li>
                  <li><a href="/chaabi-jmeter-tests/historical-reports/index.html">View Previous Test Run</a></li>
                </ul>
              </div>
            </body>
            </html>
            EOL
          fi
          
          # Add .nojekyll file
          touch ./working-dir/deploy/.nojekyll
          
          # Fix base URL in main index.html
          sed -i 's#<head>#<head><base href="/chaabi-jmeter-tests/">#g' ./working-dir/deploy/index.html

      # ✅ Fix all HTML files to ensure proper base URLs
      - name: Fix base URLs in all HTML files
        run: |
          # Find all index.html files and add the base URL if not already present
          find ./working-dir/deploy/ -name "index.html" -type f -exec grep -l "<base href=" {} \; -o -exec sed -i 's#<head>#<head><base href="/chaabi-jmeter-tests/">#g' {} \;

      # ✅ Upload artifact for GitHub Pages
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./working-dir/deploy

      # ✅ Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4