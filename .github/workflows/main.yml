name: JMeter CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # ✅ JMeter Tests
  jmeter-tests:
    runs-on: ubuntu-latest

    steps:
      # ✅ Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ Install JMeter
      - name: Install JMeter
        run: |
          sudo apt update
          sudo apt install -y openjdk-11-jre
          wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.6.2.tgz
          tar -xvzf apache-jmeter-5.6.2.tgz
          echo "JMETER_HOME=$(pwd)/apache-jmeter-5.6.2" >> $GITHUB_ENV
          echo "$(pwd)/apache-jmeter-5.6.2/bin" >> $GITHUB_PATH

      # ✅ Reload environment variables
      - name: Load environment variables
        run: source $GITHUB_ENV

      # ✅ Verify JMeter installation
      - name: Verify JMeter Installation
        run: |
          jmeter --version

      # ✅ Setup Node.js for deletion API
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: scripts/package.json

      # ✅ Install Node.js dependencies
      - name: Install Node.js dependencies
        run: |
          cd scripts
          npm install

      # ✅ Create report directories
      - name: Create report directories
        run: |
          mkdir -p ./jmeter-pages/reports
          mkdir -p ./jmeter-tests/results
          mkdir -p ./jmeter-pages/history
          chmod -R 755 ./jmeter-pages

      # ✅ Download previous results if they exist
      - name: Download previous results
        id: download-previous
        continue-on-error: true  # Continue even if no previous results
        uses: actions/download-artifact@v4
        with:
          name: JMeter-History
          path: ./jmeter-pages/history
          retention-days: 30  # Keep artifacts for 30 days

      # ✅ Create empty history file if no previous results
      - name: Create empty history file if needed
        run: |
          if [ ! -f "./jmeter-pages/history/history.json" ]; then
            echo "No previous history file found. Creating an empty one."
            mkdir -p ./jmeter-pages/history
            echo '{"tests":[]}' > ./jmeter-pages/history/history.json
          fi

      # ✅ Run JMeter Tests
      - name: Run JMeter Tests
        run: |
          jmeter -n \
            -t ./C_1.jmx \
            -l ./jmeter-tests/results/results.jtl \
            -e -o ./jmeter-pages/reports \
            -Jthreads=100 -Jrampup=10 -Jduration=60 -f

      # ✅ Make scripts executable
      - name: Make scripts executable
        run: |
          chmod +x ./scripts/generate_history.sh
          chmod +x ./scripts/generate_comparison_page.sh
          chmod +x ./scripts/run_comparison.sh
          chmod +x ./scripts/launch_comparison_viewer.sh

      # ✅ Generate historical comparison
      - name: Generate Historical Comparison
        run: |
          # Ensure history directory exists and has proper permissions
          mkdir -p ./jmeter-pages/history
          chmod -R 755 ./jmeter-pages/history
          ./scripts/run_comparison.sh ./jmeter-tests/results/results.jtl

      # ✅ Set up comparison viewer
      - name: Set up Comparison Viewer
        run: |
          ./scripts/launch_comparison_viewer.sh

      # ✅ Display Test Summary
      - name: Display Test Summary
        run: |
          echo "Test Summary:"
          grep "summary =" ./jmeter-tests/results/results.jtl || echo "No summary found"

      # ✅ Upload Reports as Artifacts
      - name: Upload JMeter Reports
        uses: actions/upload-artifact@v4
        with:
          name: JMeter-Reports
          path: ./jmeter-pages/reports
          retention-days: 30  # Keep artifacts for 30 days

      # ✅ Upload Historical Data as Artifacts
      - name: Upload Historical Data
        uses: actions/upload-artifact@v4
        with:
          name: JMeter-History
          path: ./jmeter-pages/history
          retention-days: 30  # Keep artifacts for 30 days

  # ✅ GitHub Pages Deployment
  deploy:
    needs: jmeter-tests
    runs-on: ubuntu-latest

    steps:
      # ✅ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ Download JMeter Reports Artifact
      - name: Download JMeter Reports
        uses: actions/download-artifact@v4
        with:
          name: JMeter-Reports
          path: ./jmeter-pages/reports

      # ✅ Download Historical Data Artifact
      - name: Download Historical Data
        uses: actions/download-artifact@v4
        with:
          name: JMeter-History
          path: ./jmeter-pages/history

      # ✅ Prepare for GitHub Pages
      - name: Prepare GitHub Pages Structure
        run: |
          # Create public directory
          mkdir -p ./public
          
          # Copy reports to public/reports
          mkdir -p ./public/reports
          cp -r ./jmeter-pages/reports/* ./public/reports/
          
          # Copy history data to public/history
          mkdir -p ./public/history
          cp -r ./jmeter-pages/history/* ./public/history/
          
          # Create index.html that redirects to reports
          cat > ./public/index.html << 'EOL'
          <!DOCTYPE html>
          <html>
            <head>
              <meta charset="UTF-8">
              <meta http-equiv="refresh" content="0;url=reports/">
              <title>JMeter Test Reports</title>
            </head>
            <body>
              <p>If you are not redirected automatically, follow this <a href="reports/">link to the reports</a>.</p>
            </body>
          </html>
          EOL

      # ✅ Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          publish_branch: gh-pages
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          full_commit_message: 'Deploy JMeter test reports from ${{ github.sha }}' 
