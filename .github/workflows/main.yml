name: JMeter CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # ✅ JMeter Tests
  jmeter-tests:
    runs-on: ubuntu-latest

    steps:
      # ✅ Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ Install JMeter
      - name: Install JMeter
        run: |
          sudo apt update
          sudo apt install -y openjdk-11-jre
          wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.6.2.tgz
          tar -xvzf apache-jmeter-5.6.2.tgz
          echo "JMETER_HOME=$(pwd)/apache-jmeter-5.6.2" >> $GITHUB_ENV
          echo "$(pwd)/apache-jmeter-5.6.2/bin" >> $GITHUB_PATH

      # ✅ Reload environment variables
      - name: Load environment variables
        run: source $GITHUB_ENV

      # ✅ Verify JMeter installation
      - name: Verify JMeter Installation
        run: |
          jmeter --version

      # ✅ Create report directories
      - name: Create report directories
        run: |
          mkdir -p ./jmeter-pages/reports
          mkdir -p ./jmeter-tests/results
          mkdir -p ./jmeter-pages/history

      # ✅ Download previous results if they exist
      - name: Download previous results
        id: download-previous
        continue-on-error: true  # Continue even if no previous results
        uses: actions/download-artifact@v4
        with:
          name: JMeter-History
          path: ./jmeter-pages/history

      # ✅ Run JMeter Tests
      - name: Run JMeter Tests
        run: |
          jmeter -n \
            -t ./C_1.jmx \
            -l ./jmeter-tests/results/results.jtl \
            -e -o ./jmeter-pages/reports \
            -Jthreads=100 -Jrampup=10 -Jduration=60 -f

      # ✅ Make scripts executable
      - name: Make scripts executable
        run: |
          chmod +x ./scripts/generate_history.sh
          chmod +x ./scripts/generate_comparison_page.sh
          chmod +x ./scripts/run_comparison.sh

      # ✅ Generate historical comparison
      - name: Generate Historical Comparison
        run: |
          ./scripts/run_comparison.sh ./jmeter-tests/results/results.jtl

      # ✅ Display Test Summary
      - name: Display Test Summary
        run: |
          echo "Test Summary:"
          grep "summary =" ./jmeter-tests/results/results.jtl || echo "No summary found"

      # ✅ Upload Reports as Artifacts
      - name: Upload JMeter Reports
        uses: actions/upload-artifact@v4
        with:
          name: JMeter-Reports
          path: ./jmeter-pages/reports

      # ✅ Upload Historical Data as Artifacts
      - name: Upload Historical Data
        uses: actions/upload-artifact@v4
        with:
          name: JMeter-History
          path: ./jmeter-pages/history

  # ✅ GitHub Pages Deployment
  deploy:
    needs: jmeter-tests
    runs-on: ubuntu-latest

    steps:
      # ✅ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ Download JMeter Reports Artifact
      - name: Download JMeter Reports
        uses: actions/download-artifact@v4
        with:
          name: JMeter-Reports
          path: ./jmeter-pages/reports

      # ✅ Prepare for GitHub Pages
      - name: Prepare GitHub Pages Structure
        run: |
          # Create public directory
          mkdir -p ./public
          
          # Copy reports to public/reports
          mkdir -p ./public/reports
          cp -r ./jmeter-pages/reports/* ./public/reports/
          
          # Create 404.html in reports directory
          cp ./public/reports/index.html ./public/reports/404.html
          
          # Create an index.html in the root that redirects to reports/
          echo '<!DOCTYPE html>
          <html>
          <head>
            <meta http-equiv="refresh" content="0; url=reports/">
            <title>Redirecting to JMeter Reports</title>
          </head>
          <body>
            <p>If you are not redirected automatically, <a href="reports/">click here</a>.</p>
          </body>
          </html>' > ./public/index.html
          
          # Create top-level 404.html file
          cp ./public/index.html ./public/404.html

      # ✅ Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages                # Target branch for GitHub Pages
          folder: ./public                # Folder containing the HTML reports
          token: ${{ secrets.GITHUB_TOKEN }}
          clean: true
          force: true
          attempt-limit: 3 
